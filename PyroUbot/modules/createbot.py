from pyrogram import Client, filters
from PyroUbot import PY
from PyroUbot import *

__MODULE__ = "·¥Ñ Ä·¥á·¥Ä·¥õ·¥á  ô·¥è·¥õ"
__HELP__ = """
<blockquote><b>„Äé  ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã ·¥ò·¥á·¥ç ô·¥ú·¥Ä·¥õ·¥Ä…¥  ô·¥è·¥õ ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™s „Äè</b>

·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: <code>{0}·¥Ñ Ä·¥á·¥Ä·¥õ·¥á ô·¥è·¥õ</code> […¥·¥Ä·¥ç·¥Ä_ ô·¥è·¥õ ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á_ ô·¥è·¥õ]
·¥ò·¥á…¥·¥ä·¥á ü·¥Äs·¥Ä…¥: ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ  ô·¥è·¥õ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç  ô·¥Ä Ä·¥ú ·¥è·¥õ·¥è·¥ç·¥Ä·¥õ…™s ·¥ç·¥á ü·¥Ä ü·¥ú…™ @ ô·¥è·¥õÍú∞·¥Ä·¥õ ú·¥á Ä ·¥Ñ·¥áss</blockquote>

"""

@PY.UBOT("createbot")
@PY.TOP_CMD
async def create_bot_command(client, message):
    # Ambil argumen dari pesan
    args = message.text.split(maxsplit=2)

    if len(args) < 3:
        await message.reply_text(
            "<blockquote><b>‚ö†Ô∏è …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ Íú∞·¥è Ä·¥ç·¥Ä·¥õ ·¥Ñ·¥áss: createbot [nama_bot] [username_bot]</b></blockquote>\n"
            "·¥Ñ·¥è…¥·¥õ·¥è ú ·¥Ñ·¥áss: <code>.createbot NamaBot Nama_Bot</code>"
        )
        return

    bot_name = args[1]
    bot_username = args[2]

    if not bot_username.endswith("Bot"):
        await message.reply_text("‚ùå **·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á  ô·¥è·¥õ  ú·¥Ä Ä·¥ús ·¥Ö…™·¥Ä·¥ã ú…™ Ä…™ ·¥Ö·¥á…¥…¢·¥Ä…¥ ' ô·¥è·¥õ' ·¥Ñ·¥áss.**")
        return

    try:
        botfather = "@BotFather"
        
        # Kirim ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú ke BotFather
        await client.send_message(botfather, "/newbot")
        await asyncio.sleep(2)
        await client.send_message(botfather, bot_name)
        await asyncio.sleep(2)
        await client.send_message(botfather, bot_username)

        await message.reply_text(
            f"<blockquote><b>‚úÖ **·¥ò·¥á Ä·¥ç…™…¥·¥õ·¥Ä·¥Ä…¥ ·¥ò·¥á·¥ç ô·¥ú·¥Ä·¥õ·¥Ä…¥  ô·¥è·¥õ ·¥õ·¥á ü·¥Ä ú ·¥Ö…™·¥ã…™ Ä…™·¥ç ·¥ã·¥á @BotFather ·¥Ñ·¥áss!**\n"
            f"üÜï **…¥·¥Ä·¥ç·¥Ä  ô·¥è·¥õ:** `{bot_name}`\n"
            f"üîó **·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á:** @{bot_username}\n\n"
            "s…™ ü·¥Ä·¥ã·¥Ä…¥ ·¥Ñ·¥á·¥ã @BotFather ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á ü·¥Ä…¥·¥ä·¥ú·¥õ·¥ã·¥Ä…¥ ·¥ò Ä·¥ès·¥ás ·¥ã·¥è…¥Íú∞…™…¢·¥ú Ä·¥Äs…™ ·¥Ñ·¥áss.</blockquote></b>"
        )
    
    except Exception as e:
        await message.reply_text(f"‚ö†Ô∏è ·¥õ·¥á Ä·¥ä·¥Ä·¥Ö…™ ·¥ã·¥ás·¥Ä ü·¥Ä ú·¥Ä…¥ ·¥Ñ·¥áss: {str(e)}")