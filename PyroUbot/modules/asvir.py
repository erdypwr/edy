from PyroUbot import *
import random
import requests
from pyrogram.enums import ChatAction, ParseMode
from pyrogram import filters
from pyrogram.types import Message

__MODULE__ = "·¥Äs·¥†…™ Ä ·¥Ä…™"
__HELP__ = """
<blockquote><b>‚úÆ  ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã ·¥Äs…™s·¥õ·¥á…¥ ·¥†…™ Ä·¥õ·¥ú·¥Ä ü ‚úÆ

·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú : <code>{0}·¥Äs·¥†…™ Ä</code>
    ·¥Ä…™  ô…™s·¥Ä ·¥Ö…™…¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã: ·¥õ Ä·¥Ä…¥s ü·¥Ä·¥õ·¥á, ·¥ç·¥á·¥ç ô·¥á Ä…™·¥ã·¥Ä…¥ s·¥Ä Ä·¥Ä…¥, ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ , ·¥Ñ·¥è…¥·¥õ·¥è ú <code>{0}·¥Äs·¥†…™ Ä</code>  ô·¥Ä ú·¥Äs·¥Ä …™…¥…¢…¢ Ä…™s …¥ è·¥Ä 's…™·¥Ä·¥ò·¥Ä ·¥ã·¥Ä·¥ç·¥ú' …™·¥õ·¥ú ·¥Ä·¥ò·¥Ä?</b></blockquote>
"""

@PY.UBOT("asvir")
@PY.TOP_CMD
async def chat_gpt(client, message):
    try:
        await client.send_chat_action(message.chat.id, ChatAction.TYPING)

        if len(message.command) < 2:
            await message.reply_text(
                "<emoji id=5019523782004441717>‚ùå</emoji>·¥ç·¥è ú·¥è…¥ …¢·¥ú…¥·¥Ä·¥ã·¥Ä…¥ Íú∞·¥è Ä·¥ç·¥Ä·¥õ\n·¥Ñ·¥è…¥·¥õ·¥è ú : .·¥Äs·¥†…™ Ä  ô·¥Ä ú·¥Äs·¥Ä …™…¥…¢…¢ Ä…™s …¥ è·¥Ä 's…™·¥Ä·¥ò·¥Ä ·¥ã·¥Ä·¥ç·¥ú' …™·¥õ·¥ú ·¥Ä·¥ò·¥Ä?"
            )
        else:
            prs = await message.reply_text(f"<emoji id=4943239162758169437>ü§©</emoji>·¥ç·¥á…¥·¥ä·¥Ä·¥°·¥Ä ô....")
            hai = message.text.split(' ', 1)[1]
            response = requests.get(f'https://vapis.my.id/api/llamav1?q={hai}')

            try:
                if "result" in response.json():
                    x = response.json()["result"]                  
                    await prs.edit(
                      f"<blockquote>{x}</blockquote>"
                    )
                else:
                    await message.reply_text("·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ä·¥Ö·¥Ä ' Ä·¥ás·¥ú ü·¥õs' ·¥Ö…™·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥ ·¥Ö…™  Ä·¥ás·¥ò·¥è…¥Íú±.")
            except KeyError:
                await message.reply_text("·¥ã·¥ás·¥Ä ü·¥Ä ú·¥Ä…¥ ·¥Ä·¥ãs·¥ás  Ä·¥ás·¥ò·¥è…¥Íú±.")
    except Exception as e:
        await message.reply_text(f"·¥ã·¥ás·¥Ä ü·¥Ä ú·¥Ä…¥: {e}")
      
