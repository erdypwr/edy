import os
from PyroUbot import *
import requests

__MODULE__ = "·¥á·¥ò ú·¥è·¥õ·¥è"
__HELP__ = """**„Äå  ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥è·¥Ö·¥ú ü·¥á ·¥á·¥òÍú∞·¥è·¥õ·¥è ·¥Ñ·¥áÍú±Íú± „Äç**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .television (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ ·¥õ·¥á ü·¥á·¥†…™Íú±…™·¥è…¥**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .glasse (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ …¢ ü·¥ÄÍú±Íú±·¥á**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .blackpink (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ  ô ü·¥Ä·¥Ñ·¥ã·¥ò…™…¥·¥ã**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .blackpink2 (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ  ô ü·¥Ä·¥Ñ·¥ã·¥ò…™…¥·¥ã2**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .coverpubg (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ  ô ü·¥Ä·¥Ñ·¥ã·¥ò…™…¥·¥ã2**

ñ†á‚ûõ **·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú: .hororr (·¥õ·¥áx·¥õ)**
ñ†á‚ûõ **·¥ò·¥á…¥·¥ä·¥á ü·¥ÄÍú±·¥Ä…¥: ·¥ú…¥·¥õ·¥ú·¥ã ·¥ç·¥á·¥ç ô·¥ú·¥Ä·¥õ ·¥õ·¥áx·¥õ  ú·¥è Ä·¥è Ä Ä Ä**"""

def tweet(text):
    url = "https://api.botcahx.eu.org/api/ephoto/televisi"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None
        
def rob(text):
    url = "https://api.botcahx.eu.org/api/ephoto/coverpubg"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None
        
def robottt(text):
    url = "https://api.botcahx.eu.org/api/ephoto/horor"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None

def fb(text):
    url = "https://api.botcahx.eu.org/api/ephoto/blackpink"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None

def fbs(text):
    url = "https://api.botcahx.eu.org/api/ephoto/blackpink2"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None

def tweets(text):
    url = "https://api.botcahx.eu.org/api/ephoto/glasse"
    params = {
        "text": text,
        "apikey": "045705b1"
    }   
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        
        if response.headers.get("Content-Type", "").startswith("image/"):
            return response.content
        else:
            return None
    except requests.exceptions.RequestException:
        return None

          
@PY.UBOT("hororr")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : . ú·¥è Ä·¥è Ä Ä Ä ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = robottt(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")

@PY.UBOT("coverpubg")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : .·¥Ñ·¥è·¥†·¥á Ä·¥ò·¥ú ô…¢ ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = rob(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")

@PY.UBOT("blackpink")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : . ô ü·¥Ä·¥Ñ·¥ã·¥ò…™…¥·¥ã ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = fb(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")
@PY.UBOT("blackpink2")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : . ô ü·¥Ä·¥Ñ·¥ã·¥ò…™…¥·¥ã ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = fbs(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")
@PY.UBOT("television")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : .·¥õ·¥á ü·¥á·¥†…™s…™·¥è…¥ ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = tweet(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")

@PY.UBOT("glasse")
async def _(client, message):
    args = message.text.split(" ", 1)
    if len(args) < 2:
        await message.reply_text("·¥Ñ·¥è…¥·¥õ·¥è ú : .…¢ ü·¥Äss·¥á ·¥ò·¥á…¥·¥è")
        return

    request_text = args[1]
    processing_msg = await message.edit(" ü·¥è·¥Ä·¥Ö…™…™…™…¥…¢..........")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ± ùü∏ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ± ùü∫ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ± ùüºùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ± ùüæùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ ùü∑ùü∂ùü∂%")
    await asyncio.sleep(0.1)
    processing_msg = await message.edit("‚ú¶ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚ú¶")
    await asyncio.sleep(0.1)
    image_content = tweets(request_text)
    if image_content:
        temp_file = "img.jpg"
        with open(temp_file, "wb") as f:
            f.write(image_content)

        await message.reply_photo(photo=temp_file)
        
        os.remove(temp_file)
    else:
        await message.reply_text("·¥Ä·¥ò…™·¥ã·¥á è s·¥á·¥Ö·¥Ä…¥…¢  ô·¥á Ä·¥ç·¥Äs·¥Ä ü·¥Ä ú ·¥Ñ·¥áss")
